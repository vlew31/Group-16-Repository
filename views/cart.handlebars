<h1>Cart</h1>
<div id="cart-items">
    <!-- Cart items will be dynamically added here -->
</div>
<div id="cart-total">
    Total: $<span id="total-amount">50.20</span>
</div>
<button id="checkout-btn" onclick="checkout()">Checkout</button>

<h1>Wishlist</h1>
<div id="wishlist-items">
    <!-- Wishlist items will be dynamically added here -->
</div>
<div id="wishlist-total">
    Total: $<span id="wishlist-amount">12.12</span>
</div>
<button id="add-to-cart-btn" onclick="addToCart()">Add to Cart</button>

<h1>Wallet</h1>
<div>
    <label for="addFundsInput">Add Funds:</label>
    <input type="number" id="addFundsInput" placeholder="Enter amount">
    <button onclick="addFunds()">Add</button>
</div>
<div id="walletInfo">
    <p>Your Wallet Balance: <span id="walletBalance">$0</span></p>
</div>

<script>
    let walletBalance = 0;

    // Function to fetch the wallet balance of a specific user from the server
    async function fetchWalletBalance(userId) {
        try {
            const response = await fetch(`http://localhost:3000/users/6636ac25ecdee6803ea547f9`);
            if (!response.ok) {
                throw new Error('Failed to fetch wallet balance');
            }
            const userData = await response.json();
            walletBalance = userData.balance; // Assuming the response contains the user's wallet balance
            updateWalletBalance();
        } catch (error) {
            console.error('Error fetching wallet balance:', error);
        }
    }

    function updateWalletBalance() {
        document.getElementById("walletBalance").innerText = "$" + walletBalance.toFixed(2);
    }

    // Call fetchWalletBalance with the specific user's ID
    fetchWalletBalance("6636ac25ecdee6803ea547f9");
    updateWalletBalance();


    function addFunds() {
        const fundsToAdd = parseFloat(document.getElementById("addFundsInput").value);
        if (!isNaN(fundsToAdd)) {
            walletBalance += fundsToAdd;
            updateWalletBalance();
        } else {
            alert("Please enter a valid number.");
        }
    }

    function updateWalletBalance() {
        document.getElementById("walletBalance").innerText = "$" + walletBalance.toFixed(2);
    }

    function addToCart() {
        const wishlistAmount = parseFloat(document.getElementById("wishlist-amount").innerText);
        const cartTotalElement = document.getElementById("total-amount");
        const currentCartTotal = parseFloat(cartTotalElement.innerText);
        if (!isNaN(wishlistAmount)) {
            cartTotalElement.innerText = (currentCartTotal + wishlistAmount).toFixed(2);
            alert("Items from wishlist added to cart!");
            document.getElementById("wishlist-items").innerHTML = "";
            document.getElementById("wishlist-amount").innerText = "0.00";
        } else {
            alert("Invalid wishlist amount.");
        }
    }

    function checkout() {
        const totalAmount = parseFloat(document.getElementById("total-amount").innerText);
        if (!isNaN(totalAmount)) {
            if (totalAmount <= walletBalance) {
                walletBalance -= totalAmount;
                updateWalletBalance();
                alert("Checkout successful!");
                document.getElementById("total-amount").innerText = "0.00";
            } else {
                alert("Insufficient funds in the wallet.");
            }
        } else {
            alert("Invalid total amount.");
        }
    }
</script>
